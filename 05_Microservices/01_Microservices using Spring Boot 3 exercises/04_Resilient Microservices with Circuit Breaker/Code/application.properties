# Server Port
server.port=8080

# Resilience4j Circuit Breaker Configuration
#
# 'paymentService' corresponds to the name used in the @CircuitBreaker annotation
# on your PaymentService.processPayment method.
#
# registerHealthIndicator: Enables Actuator health endpoint for this circuit breaker.
resilience4j.circuitbreaker.instances.paymentService.registerHealthIndicator=true

# slidingWindowSize: The size of the sliding window for metrics (number of calls).
# Failure rate is calculated over this window.
resilience4j.circuitbreaker.instances.paymentService.slidingWindowSize=10

# minimumNumberOfCalls: Minimum number of calls required before the circuit breaker
# can calculate the failure rate and potentially open.
resilience4j.circuitbreaker.instances.paymentService.minimumNumberOfCalls=5

# failureRateThreshold: Percentage of failed calls (0-100) that will cause the circuit
# to open.
resilience4j.circuitbreaker.instances.paymentService.failureRateThreshold=50

# waitDurationInOpenState: Duration (e.g., 5s, 1m) the circuit breaker stays in the
# OPEN state before transitioning to HALF_OPEN.
resilience4j.circuitbreaker.instances.paymentService.waitDurationInOpenState=5s

# permittedNumberOfCallsInHalfOpenState: Number of calls permitted to pass through
# to the backend service in the HALF_OPEN state to test for recovery.
resilience4j.circuitbreaker.instances.paymentService.permittedNumberOfCallsInHalfOpenState=3

# automaticTransitionFromOpenToHalfOpenEnabled: If true, the circuit automatically
# transitions from OPEN to HALF_OPEN after waitDurationInOpenState.
resilience4j.circuitbreaker.instances.paymentService.automaticTransitionFromOpenToHalfOpenEnabled=true


# Logging Configuration
# Set logging level for your application's package
logging.level.com.example.paymentservice=INFO

# Set logging level for Resilience4j library itself to see detailed events
# Ensure no extra spaces or comments after 'DEBUG' on this line.
logging.level.io.github.resilience4j=DEBUG


# Spring Boot Actuator Configuration
# By default, only /health and /info endpoints are exposed over HTTP.
# To expose other endpoints like /metrics, you need to explicitly include them.
# Using '*' exposes all available Actuator endpoints.
management.endpoints.web.exposure.include=*